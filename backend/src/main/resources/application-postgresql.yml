spring:
  application:
    name: stock-genie-backend
  
  profiles:
    active: postgresql
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:stockgenie}
    username: ${DB_USER:stockgenie_user}
    password: ${DB_PASSWORD:stockgenie_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC
        order_inserts: true
        order_updates: true
        batch_size: 25
        fetch_size: 50
        jdbc.batch_versioned_data: true
        connection.provider_disables_autocommit: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region.factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
      password: ${REDIS_PASSWORD:}
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 2000ms
  
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1 hour
      cache-null-values: false
    cache-names:
      - stockData
      - technicalAnalysis
      - llmAnalysis

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env
  endpoint:
    health:
      show-details: always
      show-components: always
  info:
    env:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Financial API Configuration
financial:
  api:
    provider: alpha-vantage
    alpha-vantage:
      base-url: https://www.alphavantage.co/query
      api-key: ${ALPHA_VANTAGE_API_KEY:demo}
      rate-limit:
        calls-per-minute: 5
        calls-per-day: 25
      timeout: 30000
      retry-attempts: 3
      retry-delay: 1000
    eodhd:
      base-url: https://eodhd.com/api
      api-key: ${EODHD_API_KEY:demo}
      rate-limit:
        calls-per-day: 20
      timeout: 30000
      retry-attempts: 3
      retry-delay: 1000

# Local LLM Configuration
local-llm:
  provider: ollama
  base-url: ${LLM_BASE_URL:http://localhost:11434}
  model: ${LLM_MODEL:mistral:7b}
  timeout: ${LLM_TIMEOUT:30000}
  max-tokens: ${LLM_MAX_TOKENS:1000}
  temperature: ${LLM_TEMPERATURE:0.7}
  top-p: ${LLM_TOP_P:0.9}

# Application Configuration
app:
  cache:
    stock-data-ttl: ${CACHE_STOCK_DATA_TTL:3600} # 1 hour in seconds
    technical-analysis-ttl: ${CACHE_TECHNICAL_ANALYSIS_TTL:1800} # 30 minutes in seconds
    llm-analysis-ttl: ${CACHE_LLM_ANALYSIS_TTL:7200} # 2 hours in seconds
  analysis:
    default-period: ${ANALYSIS_DEFAULT_PERIOD:30} # days
    max-period: ${ANALYSIS_MAX_PERIOD:365} # days
    batch-size: ${ANALYSIS_BATCH_SIZE:100}
  data:
    retention-days: ${DATA_RETENTION_DAYS:365} # Keep data for 1 year
    cleanup-enabled: ${DATA_CLEANUP_ENABLED:true}
    cleanup-schedule: ${DATA_CLEANUP_SCHEDULE:0 0 2 * * ?} # Daily at 2 AM

# Logging Configuration
logging:
  level:
    com.stockgenie: ${LOG_LEVEL_STOCKGENIE:INFO}
    org.springframework.web: ${LOG_LEVEL_SPRING_WEB:WARN}
    org.hibernate.SQL: ${LOG_LEVEL_HIBERNATE_SQL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_LEVEL_HIBERNATE_BINDER:WARN}
    org.springframework.cache: ${LOG_LEVEL_SPRING_CACHE:WARN}
    org.springframework.data.redis: ${LOG_LEVEL_REDIS:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE_PATH:logs/stock-genie.log}
    max-size: ${LOG_FILE_MAX_SIZE:100MB}
    max-history: ${LOG_FILE_MAX_HISTORY:30}

# Database Migration Configuration
spring:
  flyway:
    enabled: ${FLYWAY_ENABLED:true}
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
